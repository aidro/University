name: Gitea Actions Demo
run-name: ${{ gitea.actor }} is testing out Gitea Actions ðŸš€
on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          # Clean up previous apt cache and list files to ensure a fresh start
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

          # Update CA certificates and install required packages
          sudo apt update
          sudo apt install -y --no-install-recommends ca-certificates curl gnupg

          # Create the keyring directory if it doesnâ€™t already exist
          sudo install -m 0755 -d /etc/apt/keyrings

          # Download and add Docker's GPG key to the keyring explicitly
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg

          # Add the Docker repository to Apt sources
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          # Update and install Docker
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io sshpass
          
          # Clean up after installation to free up space
          sudo apt-get clean

      - name: Build Docker image
        run: |
          docker build -t uptime-kuma .

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Tag and Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker tag uptime-kuma $DOCKER_USERNAME/uptime-kuma:latest
          docker push $DOCKER_USERNAME/uptime-kuma:latest

      - name: Deploy Docker container on remote server
        env:
          DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          sshpass -p "$DEPLOY_PASSWORD" ssh -T -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_SERVER" << 'EOF'
            echo adema2003
            sudo docker stop uptime-kuma || true
            sudo docker rm uptime-kuma || true
            sudo docker pull adema2003/uptime-kuma:latest
            sudo docker run -d --name uptime-kuma -p 3001:3001 -v uptime-kuma:/app/data adema2003/uptime-kuma:latest
          EOF